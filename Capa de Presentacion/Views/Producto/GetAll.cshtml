@model Capa_de_Modelo.Producto
@{
    ViewBag.Title = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Productos Existentes</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h5>Seleccione un producto para editarlo o + para agregar...</h5>
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="d-flex justify-content-end" style="float:right;">
            @Html.ActionLink("+", "Form", "Producto", htmlAttributes: new { @class = "btn btn-success" })
        </div>
    </div>

    @if (Model.Productos != null)
    {
        <div class="row table-responsive">
            <table style="text-align:center; vertical-align:middle;" class="table table-bordered table-hover table-striped">
                <thead class="table-info fw-bold">
                    <tr>
                        <td>Editar</td>
                        <td class="visually-hidden">IdProducto</td>
                        <td>Nombre</td>
                        <td>Precio</td>
                        <td>Descripcion</td>
                        <td>Stock</td>
                        <td>Imagen</td>
                        <td>Eliminar</td>
                    </tr>
                </thead>
                <tbody class="table-light">
                    @foreach (Capa_de_Modelo.Producto producto in Model.Productos)
                    {
                        <tr>
                            <td><a class="btn btn-warning" href="@Url.Action("Form", "Producto", new { IdProducto = producto.IdProducto })"><i class="bi bi-pencil"></i></a></td>
                            <td class="visually-hidden">@producto.IdProducto</td>
                            <td>@producto.Nombre </td>
                            <td>@producto.Precio</td>
                            <td>@producto.Descripcion</td>
                            <td>@producto.Stock </td>
                            @if (producto.Imagen != null)
                            {
                                <td><img src="data:image/*;base64,@producto.Imagen" width="auto" height="50" /></td>
                            }
                            else
                            {

                                <td><img src="~/Content/sinimagen.jpg" width="auto" height="50" id="Img" /></td>
                            }

                            <td><a class="btn btn-danger" href="@Url.Action("Delete", "Producto", new { IdProducto= producto.IdProducto})" onclick="return confirm('Desea eliminar el producto?');"><i class="bi bi-trash"></i></a></td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-danger">
                    No se encontraron productos registrados.
                </div>
            </div>
        </div>
    }

</div>
<script language="text/Javascript">

    cleared[0] = cleared[1] = cleared[2] = 0; //set a cleared flag for each field
    function clearField(t) {                   //declaring the array outside of the
        if (!cleared[t.id]) {                      // function makes it static and global
            cleared[t.id] = 1;  // you could use true and false, but that's more typing
            t.value = '';         // with more chance of typos
            t.style.color = '#fff';
        }
    }
</script>



